// –¢–∏–ø—ã –¥–ª—è RNNoise
interface RNNoiseModule {
  _rnnoise_create(): number;
  _rnnoise_destroy(state: number): void;
  _rnnoise_process_frame(state: number, output: number, input: number): number;
  _malloc(size: number): number;
  _free(ptr: number): void;
  HEAPF32: Float32Array;
}

interface NoiseSuppressionSettings {
  enabled: boolean;
  level: 'basic' | 'advanced' | 'professional'; // basic = browser native, advanced = RNNoise, professional = our advanced AI
  sensitivity: number; // 0-100
  vadThreshold: number; // –ü–æ—Ä–æ–≥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≥–æ–ª–æ—Å–∞ –≤ –¥–ë (-60 –¥–æ 0)
  vadEnabled: boolean; // –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å VAD
  mode?: 'gentle' | 'balanced' | 'aggressive'; // –†–µ–∂–∏–º—ã –¥–ª—è professional —É—Ä–æ–≤–Ω—è
}

class NoiseSuppressionService {
  private audioContext: AudioContext | null = null;
  private workletNode: AudioWorkletNode | null = null;
  private isInitialized = false;
  private settings: NoiseSuppressionSettings = {
    enabled: true,
    level: 'professional', // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    sensitivity: 75,
    vadThreshold: -30, // –¥–ë
    vadEnabled: true,
    mode: 'balanced'
  };
  private isSettingsLoaded = false;
  
  // RNNoise —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è
  private rnnoiseModule: RNNoiseModule | null = null;
  private isRNNoiseLoaded = false;
  
  // Advanced AI —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è
  private isAdvancedLoaded = false;

  constructor() {
    // –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –¥–ª—è SSR —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  }

  private ensureSettingsLoaded() {
    if (!this.isSettingsLoaded && typeof window !== 'undefined') {
      this.loadSettings();
      this.isSettingsLoaded = true;
    }
  }

  private loadSettings() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
    if (typeof window === 'undefined') return;
    
    try {
      const saved = localStorage.getItem('noise-suppression-settings');
      if (saved) {
        // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –µ—Å—Ç—å, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏—Ö
        this.settings = { ...this.settings, ...JSON.parse(saved) };
      } else {
        // –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º
        console.log('üîá –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —à—É–º–æ–¥–∞–≤.');
        this.settings.enabled = true;
        this.saveSettings();
      }
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —à—É–º–æ–¥–∞–≤–∞:', error);
    }
  }

  private saveSettings() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
    if (typeof window === 'undefined') return;
    
    try {
      localStorage.setItem('noise-suppression-settings', JSON.stringify(this.settings));
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —à—É–º–æ–¥–∞–≤–∞:', error);
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏ –≤–∫–ª—é—á–µ–Ω–∏–µ —à—É–º–æ–¥–∞–≤–∞
  forceEnableNoiseSuppression() {
    console.log('üîá –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –≤–∫–ª—é—á–∞–µ–º —à—É–º–æ–¥–∞–≤');
    
    // –û—á–∏—â–∞–µ–º localStorage
    if (typeof window !== 'undefined') {
      try {
        localStorage.removeItem('noise-suppression-settings');
        localStorage.removeItem('advanced-noise-suppression-settings');
        console.log('üîá –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—á–∏—â–µ–Ω—ã –∏–∑ localStorage');
      } catch (error) {
        console.error('üîá –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage:', error);
      }
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —à—É–º–æ–¥–∞–≤
    this.settings.enabled = true;
    this.settings.level = 'professional';
    this.settings.sensitivity = 75;
    this.settings.vadEnabled = true;
    this.settings.mode = 'balanced';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    this.saveSettings();
    
    console.log('üîá –®—É–º–æ–¥–∞–≤ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–µ–Ω —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:', this.settings);
  }

  async initialize(audioContext: AudioContext): Promise<void> {
    this.ensureSettingsLoaded();
    this.audioContext = audioContext;
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —à—É–º–æ–¥–∞–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    if (!this.settings.enabled) {
      console.log('üîá –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º —à—É–º–æ–¥–∞–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
      this.settings.enabled = true;
      this.saveSettings();
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è
    if (this.settings.level === 'advanced') {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º RNNoise –¥–ª—è —É—Ä–æ–≤–Ω—è advanced');
      await this.loadRNNoise();
    } else if (this.settings.level === 'professional') {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º Advanced AI –¥–ª—è —É—Ä–æ–≤–Ω—è professional');
      await this.loadAdvancedProcessor();
    }
    
    this.isInitialized = true;
    console.log('üîá –°–µ—Ä–≤–∏—Å —à—É–º–æ–¥–∞–≤–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω', this.settings);
  }

  private async loadRNNoise(): Promise<void> {
    try {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º RNNoise...');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º AudioWorklet –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä –¥–ª—è RNNoise
      if (this.audioContext) {
        await this.audioContext.audioWorklet.addModule('/rnnoise-processor.js');
        console.log('üîá RNNoise AudioWorklet –∑–∞–≥—Ä—É–∂–µ–Ω');
        this.isRNNoiseLoaded = true;
      }
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ RNNoise:', error);
      // Fallback –∫ –±–∞–∑–æ–≤–æ–º—É —à—É–º–æ–¥–∞–≤—É
      this.settings.level = 'basic';
      this.saveSettings();
    }
  }

  private async loadAdvancedProcessor(): Promise<void> {
    try {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º Advanced AI Processor...');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—à –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π AudioWorklet –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
      if (this.audioContext) {
        await this.audioContext.audioWorklet.addModule('/advanced-noise-processor.js');
        console.log('üîá Advanced AI Processor –∑–∞–≥—Ä—É–∂–µ–Ω');
        this.isAdvancedLoaded = true;
      }
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Advanced AI Processor:', error);
      // Fallback –∫ RNNoise –∏–ª–∏ –±–∞–∑–æ–≤–æ–º—É —à—É–º–æ–¥–∞–≤—É
      this.settings.level = 'advanced';
      this.saveSettings();
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å RNNoise
      if (!this.isRNNoiseLoaded) {
        await this.loadRNNoise();
      }
    }
  }

  async processStream(inputStream: MediaStream): Promise<MediaStream> {
    this.ensureSettingsLoaded();
    console.log('üîá processStream –≤—ã–∑–≤–∞–Ω:', {
      initialized: this.isInitialized,
      hasAudioContext: !!this.audioContext,
      settings: this.settings,
      inputStreamTracks: inputStream.getTracks().length,
      inputStreamActive: inputStream.active
    });

    if (!this.isInitialized || !this.audioContext) {
      console.warn('üîá –°–µ—Ä–≤–∏—Å —à—É–º–æ–¥–∞–≤–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫');
      return inputStream;
    }

    if (!this.settings.enabled) {
      console.log('üîá –®—É–º–æ–¥–∞–≤ –æ—Ç–∫–ª—é—á–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫');
      return inputStream;
    }

    if (this.settings.level === 'basic') {
      console.log('üîá –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ —à—É–º–∞ –±—Ä–∞—É–∑–µ—Ä–∞)');
      return inputStream;
    }

    if (this.settings.level === 'professional') {
      console.log('üîá –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å (Advanced AI)');
      return await this.processWithAdvancedAI(inputStream);
    }

    console.log('üîá –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å (RNNoise)');
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º RNNoise –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è —à—É–º–∞
    return await this.processWithRNNoise(inputStream);
  }

  private async processWithRNNoise(inputStream: MediaStream): Promise<MediaStream> {
    if (!this.audioContext) {
      console.warn('üîá –ù–µ—Ç AudioContext, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫');
      return inputStream;
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º RNNoise –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
    if (!this.isRNNoiseLoaded) {
      console.log('üîá RNNoise –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º...');
      try {
        await this.loadRNNoise();
      } catch (error) {
        console.error('üîá –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å RNNoise, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫:', error);
        return inputStream;
      }
    }

    try {
      // –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∑ –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      const source = this.audioContext.createMediaStreamSource(inputStream);
      
      // –°–æ–∑–¥–∞–µ–º AudioWorklet —É–∑–µ–ª –¥–ª—è RNNoise
      this.workletNode = new AudioWorkletNode(this.audioContext, 'rnnoise-processor', {
        processorOptions: {
          sensitivity: this.settings.sensitivity
        }
      });

      // –°–æ–∑–¥–∞–µ–º destination –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      const destination = this.audioContext.createMediaStreamDestination();

      // –°–æ–µ–¥–∏–Ω—è–µ–º: –∏—Å—Ç–æ—á–Ω–∏–∫ -> RNNoise -> destination
      source.connect(this.workletNode);
      this.workletNode.connect(destination);

      console.log('üîá RNNoise –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
      return destination.stream;
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å RNNoise:', error);
      return inputStream;
    }
  }

  private async processWithAdvancedAI(inputStream: MediaStream): Promise<MediaStream> {
    if (!this.audioContext) {
      console.warn('üîá –ù–µ—Ç AudioContext, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫');
      return inputStream;
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º Advanced AI –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
    if (!this.isAdvancedLoaded) {
      console.log('üîá Advanced AI –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º...');
      try {
        await this.loadAdvancedProcessor();
      } catch (error) {
        console.error('üîá –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Advanced AI, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫:', error);
        return inputStream;
      }
    }

    try {
      // –°–æ–∑–¥–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–∑ –≤—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      const source = this.audioContext.createMediaStreamSource(inputStream);
      
      // –°–æ–∑–¥–∞–µ–º AudioWorklet —É–∑–µ–ª –¥–ª—è –Ω–∞—à–µ–≥–æ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
      this.workletNode = new AudioWorkletNode(this.audioContext, 'advanced-noise-processor', {
        processorOptions: {
          sensitivity: this.settings.sensitivity,
          mode: this.settings.mode || 'balanced',
          vadEnabled: this.settings.vadEnabled
        }
      });

      // –°–æ–∑–¥–∞–µ–º destination –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
      const destination = this.audioContext.createMediaStreamDestination();

      // –°–æ–µ–¥–∏–Ω—è–µ–º: –∏—Å—Ç–æ—á–Ω–∏–∫ -> Advanced AI -> destination
      source.connect(this.workletNode);
      this.workletNode.connect(destination);

      console.log('üîá Advanced AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ —Å —Ä–µ–∂–∏–º–æ–º:', this.settings.mode);
      return destination.stream;
    } catch (error) {
      console.error('üîá –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å Advanced AI:', error);
      return inputStream;
    }
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
  setEnabled(enabled: boolean) {
    this.ensureSettingsLoaded();
    console.log('üîá setEnabled –≤—ã–∑–≤–∞–Ω:', enabled, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.enabled = enabled;
    this.saveSettings();
    console.log('üîá –®—É–º–æ–¥–∞–≤', enabled ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω', '–Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
  }

  setLevel(level: 'basic' | 'advanced' | 'professional') {
    this.ensureSettingsLoaded();
    console.log('üîá setLevel –≤—ã–∑–≤–∞–Ω:', level, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.level = level;
    this.saveSettings();
    console.log('üîá –£—Ä–æ–≤–µ–Ω—å —à—É–º–æ–¥–∞–≤–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:', level, '–Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ advanced, –∑–∞–≥—Ä—É–∂–∞–µ–º RNNoise
    if (level === 'advanced' && !this.isRNNoiseLoaded && this.audioContext) {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º RNNoise –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è');
      this.loadRNNoise();
    }
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏–ª–∏—Å—å –Ω–∞ professional, –∑–∞–≥—Ä—É–∂–∞–µ–º Advanced AI
    if (level === 'professional' && !this.isAdvancedLoaded && this.audioContext) {
      console.log('üîá –ó–∞–≥—Ä—É–∂–∞–µ–º Advanced AI –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è');
      this.loadAdvancedProcessor();
    }
  }

  setSensitivity(sensitivity: number) {
    this.ensureSettingsLoaded();
    console.log('üîá setSensitivity –≤—ã–∑–≤–∞–Ω:', sensitivity, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.sensitivity = Math.max(0, Math.min(100, sensitivity));
    this.saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ worklet
    if (this.workletNode) {
      this.workletNode.port.postMessage({
        type: 'setSensitivity',
        sensitivity: this.settings.sensitivity
      });
      console.log('üîá –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ worklet –æ —Å–º–µ–Ω–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏');
    }
    
    console.log('üîá –ß—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —à—É–º–æ–¥–∞–≤–∞:', this.settings.sensitivity, '–Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
  }

  setVadThreshold(threshold: number) {
    this.ensureSettingsLoaded();
    console.log('üîá setVadThreshold –≤—ã–∑–≤–∞–Ω:', threshold, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.vadThreshold = Math.max(-60, Math.min(0, threshold));
    this.saveSettings();
    console.log('üîá –ü–æ—Ä–æ–≥ VAD –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:', this.settings.vadThreshold, '–¥–ë');
  }

  setVadEnabled(enabled: boolean) {
    this.ensureSettingsLoaded();
    console.log('üîá setVadEnabled –≤—ã–∑–≤–∞–Ω:', enabled, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.vadEnabled = enabled;
    this.saveSettings();
    console.log('üîá VAD', enabled ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω');
  }

  setMode(mode: 'gentle' | 'balanced' | 'aggressive') {
    this.ensureSettingsLoaded();
    console.log('üîá setMode –≤—ã–∑–≤–∞–Ω:', mode, '—Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
    this.settings.mode = mode;
    this.saveSettings();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–∂–∏–º –≤ worklet –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è professional —É—Ä–æ–≤–µ–Ω—å
    if (this.workletNode && this.settings.level === 'professional') {
      this.workletNode.port.postMessage({
        type: 'setMode',
        mode: mode
      });
      console.log('üîá –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ worklet –æ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞');
    }
    
    console.log('üîá –†–µ–∂–∏–º —à—É–º–æ–¥–∞–≤–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:', mode, '–Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:', this.settings);
  }

  getSettings(): NoiseSuppressionSettings {
    this.ensureSettingsLoaded();
    return { ...this.settings };
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ
  isBasicSupported(): boolean {
    return 'mediaDevices' in navigator && 'getUserMedia' in navigator.mediaDevices;
  }

  isAdvancedSupported(): boolean {
    return 'AudioWorklet' in window && 'audioWorklet' in AudioContext.prototype;
  }

  // –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  cleanup() {
    if (this.workletNode) {
      this.workletNode.disconnect();
      this.workletNode = null;
    }

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –º–æ–¥—É–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    this.isInitialized = false;
    this.isRNNoiseLoaded = false;
    this.isAdvancedLoaded = false;
    this.audioContext = null; // –¢–∞–∫–∂–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç

    console.log('üîá –°–µ—Ä–≤–∏—Å —à—É–º–æ–¥–∞–≤–∞ –æ—á–∏—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  getStats() {
    return {
      initialized: this.isInitialized,
      rnnoiseLoaded: this.isRNNoiseLoaded,
      advancedLoaded: this.isAdvancedLoaded,
      settings: this.settings,
      basicSupported: this.isBasicSupported(),
      advancedSupported: this.isAdvancedSupported(),
      professionalSupported: this.isAdvancedSupported() // –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–±—É–µ—Ç —Ç–µ –∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —á—Ç–æ –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π
    };
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton
export const noiseSuppressionService = new NoiseSuppressionService();
export default noiseSuppressionService; 