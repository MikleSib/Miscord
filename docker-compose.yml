services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: miscord
      POSTGRES_USER: miscord_user
      POSTGRES_PASSWORD: miscord_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - miscord_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - miscord_network

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://miscord_user:miscord_password@postgres:5432/miscord
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-here-change-in-production
      CORS_ORIGINS: '["https://miscord.ru", "https://www.miscord.ru", "http://localhost:3000"]'
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - miscord_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build: ./frontend
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - miscord_network
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=https://miscord.ru
      - NEXT_PUBLIC_WS_URL=wss://miscord.ru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - miscord_network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:

networks:
  miscord_network:
    driver: bridge